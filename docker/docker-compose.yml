version: '3.8'

services:
  # Brain-Forge Core Application
  brain-forge:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: production
    container_name: brain-forge-app
    ports:
      - "8000:8000"  # REST API
      - "8001:8001"  # WebSocket server
    volumes:
      - brain_forge_data:/app/data
      - brain_forge_logs:/app/logs
      - brain_forge_outputs:/app/outputs
      - ./configs:/app/configs:ro
    environment:
      - BRAIN_FORGE_ENV=production
      - PYTHONPATH=/app/src
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
      - postgres
    networks:
      - brain-forge-network

  # GPU-enabled Brain-Forge for simulation
  brain-forge-gpu:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: gpu
    container_name: brain-forge-gpu
    ports:
      - "8002:8000"
    volumes:
      - brain_forge_data:/app/data
      - brain_forge_logs:/app/logs
      - brain_forge_outputs:/app/outputs
    environment:
      - BRAIN_FORGE_ENV=production
      - CUDA_VISIBLE_DEVICES=0
      - PYTHONPATH=/app/src
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    restart: unless-stopped
    depends_on:
      - redis
      - postgres
    networks:
      - brain-forge-network

  # Development environment with Jupyter
  brain-forge-dev:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: jupyter
    container_name: brain-forge-jupyter
    ports:
      - "8888:8888"  # Jupyter Lab
    volumes:
      - ../:/app
      - brain_forge_data:/app/data
      - brain_forge_logs:/app/logs
      - jupyter_home:/home/brainforge
    environment:
      - BRAIN_FORGE_ENV=development
      - JUPYTER_ENABLE_LAB=yes
      - PYTHONPATH=/app/src
    restart: unless-stopped
    networks:
      - brain-forge-network

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    container_name: brain-forge-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - brain-forge-network

  # PostgreSQL for metadata and configuration storage
  postgres:
    image: postgres:15
    container_name: brain-forge-postgres
    environment:
      POSTGRES_DB: brain_forge
      POSTGRES_USER: brain_forge
      POSTGRES_PASSWORD: brain_forge_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U brain_forge -d brain_forge"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - brain-forge-network

  # Monitoring with Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: brain-forge-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - brain-forge-network

  # Visualization with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: brain-forge-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana:/etc/grafana/provisioning:ro
    restart: unless-stopped
    depends_on:
      - prometheus
    networks:
      - brain-forge-network

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: brain-forge-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    restart: unless-stopped
    depends_on:
      - brain-forge
      - brain-forge-dev
      - grafana
    networks:
      - brain-forge-network

  # Documentation server
  docs:
    build:
      context: ..
      dockerfile: docker/Dockerfile
      target: docs
    container_name: brain-forge-docs
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - brain-forge-network

volumes:
  brain_forge_data:
    driver: local
  brain_forge_logs:
    driver: local
  brain_forge_outputs:
    driver: local
  jupyter_home:
    driver: local
  redis_data:
    driver: local
  postgres_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  brain-forge-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
